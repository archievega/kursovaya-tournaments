"""init

Revision ID: a03e16468f92
Revises: 
Create Date: 2024-05-14 23:18:08.484422

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
from fastapi_users_db_sqlalchemy.generics import GUID

# revision identifiers, used by Alembic.
revision: str = 'a03e16468f92'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.Column('id', GUID(), nullable=False),
    sa.Column('email', sa.String(length=320), nullable=False),
    sa.Column('hashed_password', sa.String(length=1024), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_table('tournament',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('manager_id', GUID(), nullable=False),
    sa.Column('title', sa.TEXT(), nullable=False),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.Column('starts_at', sa.DATE(), nullable=False),
    sa.Column('max_players', sa.INTEGER(), nullable=False),
    sa.Column('address', sa.TEXT(), nullable=False),
    sa.Column('winner_id', GUID(), nullable=True),
    sa.Column('status', postgresql.ENUM('WAITING', 'RUNNING', 'ENDED', name='tournament_status'), nullable=False),
    sa.ForeignKeyConstraint(['manager_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['winner_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('match',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('tournament_id', sa.Uuid(), nullable=False),
    sa.Column('round', sa.INTEGER(), nullable=False),
    sa.Column('player_1_id', GUID(), nullable=True),
    sa.Column('player_1_scores', sa.INTEGER(), nullable=False),
    sa.Column('player_2_id', GUID(), nullable=True),
    sa.Column('player_2_scores', sa.INTEGER(), nullable=False),
    sa.Column('winner_id', GUID(), nullable=True),
    sa.ForeignKeyConstraint(['player_1_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['player_2_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['tournament_id'], ['tournament.id'], ),
    sa.ForeignKeyConstraint(['winner_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tournament_user',
    sa.Column('tournament_id', sa.Uuid(), nullable=False),
    sa.Column('player_id', GUID(), nullable=False),
    sa.Column('status', postgresql.ENUM('WAITING', 'ACCEPTED', 'DECLINED', 'BANNED', name='player_status'), nullable=False),
    sa.ForeignKeyConstraint(['player_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['tournament_id'], ['tournament.id'], ),
    sa.PrimaryKeyConstraint('tournament_id', 'player_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('tournament_user')
    op.drop_table('match')
    op.drop_table('tournament')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    # ### end Alembic commands ###
